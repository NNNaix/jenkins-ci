// https://www.w3cschool.cn/jenkins/jenkins-qc8a28op.html
pipeline {
    agent {
        node {
            label 'deploy'
        }
    }
    

    options{
        timeout(time: 40, unit: 'MINUTES')
    }

    // builder with parameters
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'git project branch')
    }

    // 环境变量
    environment {
        JAVA_HOME = '/home/centos/opt/jdk'
        M2_HOME = '/home/centos/opt/maven'
        BRANCH = "${params.BRANCH}"

        PROJECT_NAME = 'actuatordemo'
        MOUDLE_NAME = 'actuatordemo'
        DEMO_REPO_DIR = '/var/jenkins_home/data/repos'
        
        RELEASE_DIR = '/var/jenkins_home/data/releases'
    }

    // 构建过程
    stages {

        // 拉取项目源码
        stage('Pull') {
            steps {
                echo "Pull source code with branch[${BRANCH}] $BUILD_NUMBER"
                sh '''
                cd $DEMO_REPO_DIR/$PROJECT_NAME
                git checkout master && git pull
                git checkout $BRANCH || (git fetch && git checkout -b $BRANCH "origin/"$BRANCH)
                git pull origin $BRANCH
                '''
            }
        }

        // 编译与测试
        stage('Build and Test') {
            when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
            }
            steps {
                echo "Building"
                sh "mvn -Dmaven.test.failure.ignore=false clean package"
            }
        }

        // 整理包:如版本命名等
        stage('Release package') {
            when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
            }
            steps {
                echo "Release package"
            }
        }

        // 发布部署
        stage('Deploy') {
            when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
            }
            steps {
                echo 'Deploying'
            }
        }
    }

    // 构建后处理
    post {
        always {
            // junit '**/target/*.xml'
            echo "finished, this is always print"
        }
        failure {
            // mail to: team@example.com, subject: 'The Pipeline failed :('
            echo "failed"
        }
        success {
            // mail to: team@example.com, subject: 'The Pipeline failed :('
            echo "success"
        }
    }
}